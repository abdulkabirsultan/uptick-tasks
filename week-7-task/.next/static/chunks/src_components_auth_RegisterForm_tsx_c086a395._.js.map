{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/abdulkabirsultan/Sultan/Programming/uptick-tasks/week-7-task/src/components/auth/RegisterForm.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { signIn } from 'next-auth/react';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { toast } from 'react-hot-toast';\n\nexport default function RegisterForm() {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const router = useRouter();\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    setLoading(true);\n\n    // Password validation\n    if (password !== confirmPassword) {\n      toast.error(\"Passwords don't match\");\n      setLoading(false);\n      return;\n    }\n\n    if (password.length < 6) {\n      toast.error('Password must be at least 6 characters long');\n      setLoading(false);\n      return;\n    }\n\n    try {\n      // Call your registration API endpoint\n      const response = await fetch('/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ name, email, password }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        throw new Error(data.error || 'Registration failed');\n      }\n\n      // Log in the user after successful registration\n      const result = await signIn('credentials', {\n        redirect: false,\n        email,\n        password,\n      });\n\n      if (result?.error) {\n        toast.error(result.error);\n      } else {\n        toast.success('Account created successfully!');\n        router.push('/dashboard');\n        router.refresh();\n      }\n    } catch (error: any) {\n      toast.error(error.message || 'Registration failed');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className='max-w-md w-full mx-auto p-6 bg-white rounded-lg shadow-md'>\n      <h1 className='text-2xl font-bold text-center mb-6'>Create Account</h1>\n\n      <form onSubmit={handleSubmit} className='space-y-4'>\n        <div>\n          <label\n            htmlFor='name'\n            className='block text-sm font-medium text-gray-700'\n          >\n            Name\n          </label>\n          <input\n            id='name'\n            type='text'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n            className='mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500'\n            placeholder='John Doe'\n          />\n        </div>\n\n        <div>\n          <label\n            htmlFor='email'\n            className='block text-sm font-medium text-gray-700'\n          >\n            Email\n          </label>\n          <input\n            id='email'\n            type='email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n            className='mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500'\n            placeholder='your@email.com'\n          />\n        </div>\n\n        <div>\n          <label\n            htmlFor='password'\n            className='block text-sm font-medium text-gray-700'\n          >\n            Password\n          </label>\n          <input\n            id='password'\n            type='password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            className='mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500'\n            placeholder='********'\n            minLength={6}\n          />\n        </div>\n\n        <div>\n          <label\n            htmlFor='confirmPassword'\n            className='block text-sm font-medium text-gray-700'\n          >\n            Confirm Password\n          </label>\n          <input\n            id='confirmPassword'\n            type='password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n            className='mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500'\n            placeholder='********'\n            minLength={6}\n          />\n        </div>\n\n        <button\n          type='submit'\n          disabled={loading}\n          className={`w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 ${\n            loading ? 'opacity-75 cursor-not-allowed' : ''\n          }`}\n        >\n          {loading ? 'Creating account...' : 'Create Account'}\n        </button>\n      </form>\n\n      <div className='mt-4 text-center text-sm'>\n        <p>\n          Already have an account?{' '}\n          <Link href='/login' className='text-blue-600 hover:text-blue-500'>\n            Sign in\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}